services:
  # Serviço do Backend do SplitBank (este já está funcionando, sem alterações)
  splitbank-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/usr/src/app/backend
      - /usr/src/app/backend/node_modules
    restart: always
    depends_on:
      splitbank-db:
        condition: service_healthy
        # adiconado
    command: sh -c "npx sequelize-cli db:migrate && npm start"
    environment:
      NODE_ENV: development
      PORT: 3000
      DB_HOST: splitbank-db
      DB_PORT: 5432
      DB_USER: splitbankuser
      DB_PASSWORD: splitbankpassword
      DB_NAME: splitbankdb
      JWT_SECRET: jwt_para_splitbank_backend

  # Banco de Dados do SplitBank
  splitbank-db:
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: splitbankdb
      POSTGRES_USER: splitbankuser
      POSTGRES_PASSWORD: splitbankpassword
    volumes:
      - splitbank_db_data:/var/lib/postgresql/data
    ports:
      - "54320:5432"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U splitbankuser -d splitbankdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Serviço da API Mini Banco Central
  mini-banco-central:
    build:
      context: ./backend/apis/mini-banco-central
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    volumes:
      - ./backend/apis/mini-banco-central:/usr/src/app
      - /usr/src/app/node_modules
    restart: always
    depends_on:
      mini-banco-central-db:
        condition: service_healthy
    # ADICIONADO: Força a execução das migrations antes de iniciar
    command: sh -c "npx sequelize-cli db:migrate && npm start"
    environment:
      NODE_ENV: development
      PORT: 3001
      DB_HOST: mini-banco-central-db
      DB_PORT: 5432
      DB_USER: minibancouser
      DB_PASSWORD: minibancopassword
      DB_NAME: minibancodb
      JWT_SECRET: jwt_para_minibanco

  # Banco de Dados da Mini Banco Central
  mini-banco-central-db:
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: minibancodb
      POSTGRES_USER: minibancouser
      POSTGRES_PASSWORD: minibancopassword
    volumes:
      - mini_banco_central_db_data:/var/lib/postgresql/data
    ports:
      - "54321:5432"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U minibancouser -d minibancodb"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Serviço da API Banco Central
  api-banco-central:
    build:
      context: ./backend/apis/ApiBancoCentral
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    volumes:
      - ./backend/apis/ApiBancoCentral:/usr/src/app
      - /usr/src/app/node_modules
    restart: always
    depends_on:
      api-banco-central-db:
        condition: service_healthy
    # ADICIONADO: Força a execução das migrations antes de iniciar
    command: sh -c "npx sequelize-cli db:migrate && npm start"
    environment:
      NODE_ENV: development
      PORT: 3002
      DB_HOST: api-banco-central-db
      DB_PORT: 5432
      DB_USER: apibancouser
      DB_PASSWORD: apibancopassword
      DB_NAME: apibancodb
      JWT_SECRET: jwt_para_apibanco

  # Banco de Dados da Api Banco Central
  api-banco-central-db:
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: apibancodb
      POSTGRES_USER: apibancouser
      POSTGRES_PASSWORD: apibancopassword
    volumes:
      - api_banco_central_db_data:/var/lib/postgresql/data
    ports:
      - "54322:5432"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U apibancouser -d apibancodb"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  splitbank_db_data:
  mini_banco_central_db_data:
  api_banco_central_db_data: